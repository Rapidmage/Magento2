<script>
// Specify your actual API key here:
var API_KEY = 'AIzaSyCQvseVwSnv2xEHdt3RuA9r9XTan2qdHYQ';

// Specify the URL you want PageSpeed results for here:
//var URL_TO_GET_RESULTS_FOR = "<?php echo $this->getBaseUrl(); ?>";
var URL_TO_GET_RESULTS_FOR = 'http://gator.devgmi.com/';
var API_URL = 'https://www.googleapis.com/pagespeedonline/v1/runPagespeed?';
var CHART_API_URL = 'http://chart.apis.google.com/chart?';

// Object that will hold the callbacks that process results from the
// PageSpeed Insights API.
var callbacks = {}

// Invokes the PageSpeed Insights API. The response will contain
// JavaScript that invokes our callback with the PageSpeed results.
function runPagespeed(device) {

  var s = document.createElement('script');
  s.type = 'text/javascript';
  s.async = true;
  
  var query = [
    'url=' + URL_TO_GET_RESULTS_FOR,
    'strategy=' + device,
    'callback=runPagespeedCallbacks',
    'key=' + API_KEY,
  ].join('&');
  s.src = API_URL + query;
  document.head.insertBefore(s, null);
}

// Our JSONP callback. Checks for errors, then invokes our callback handlers.
function runPagespeedCallbacks(result) {
	
  if (result.error) {
    var errors = result.error.errors;
    for (var i = 0, len = errors.length; i < len; ++i) {
      if (errors[i].reason == 'badRequest' && API_KEY == 'yourAPIKey') {
        alert('Please specify your Google API key in the API_KEY variable.');
      } else {
        // NOTE: your real production app should use a better
        // mechanism than alert() to communicate the error to the user.
        alert(errors[i].message);
      }
    }
    return;
  }

  // Dispatch to each function on the callbacks object.
  for (var fn in callbacks) {
    var f = callbacks[fn];
    if (typeof f == 'function') {
      callbacks[fn](result);
      console.log(callbacks[fn]);
    }
  }
  jQuery('.loading-txt').hide();
}


// Invoke the callback that fetches results. Async here so we're sure
// to discover any callbacks registered below, but this can be
// synchronous in your code.
runPagespeed('desktop');
runPagespeed('mobile');
var displayPageSpeedScorecalled = false;
var displayTopPageSpeedSuggestionscalled = false;
var displayResourceSizeBreakdown = false;

/* website page speed callbacks */

callbacks.displayPageSpeedScore = function(result) {

  var score = result.score;
  // Construct the query to send to the Google Chart Tools.
  /*var query = [
    'chtt=Page+Speed+score:+' + score,
    'chs=180x100',
    'cht=gom',
    'chd=t:' + score,
    'chxt=x,y',
    'chxl=0:|' + score,
  ].join('&');
  //var i = document.createElement('img');
  //i.src = CHART_API_URL + query; */
  
  if(!window.displayPageSpeedScorecalled){
  showchart('speedometer','Desktop',score);  
  var bindelt = document.getElementById("speedometer-remarks");
  //bindelt.appendChild(i);
  bindelt.innerHTML= speedRemarks(score,'desktop');
  //bindelt.appendChild(remarkselt);
  }
  else{
  showchart('speedometermobile','Mobile',score);	  
  var bindelt = document.getElementById("speedometer-remarks-mobile");
  //bindelt.appendChild(i);
  //var remarkselt = document.createElement('div');
  bindelt.innerHTML= speedRemarks(score,'mobile');
  //bindelt.appendChild(remarkselt);
}
  
   window.displayPageSpeedScorecalled=true;
  
};
callbacks.displayTopPageSpeedSuggestions = function(result) {
  var results = [];
  var ruleResults = result.formattedResults.ruleResults;
  for (var i in ruleResults) {
    var ruleResult = ruleResults[i];
    // Don't display lower-impact suggestions.
    if (ruleResult.ruleImpact < 3.0) continue;
    results.push({name: ruleResult.localizedRuleName,
                  impact: ruleResult.ruleImpact});
  }
  results.sort(sortByImpact);
  var ul = document.createElement('ul');
  for (var i = 0, len = results.length; i < len; ++i) {
    var r = document.createElement('li');
    r.innerHTML = results[i].name;
    ul.insertBefore(r, null);
  }
  if(!window.displayTopPageSpeedSuggestionscalled){
   if (ul.hasChildNodes()) {
    //document.body.insertBefore(ul, null);
    var bindelt = document.getElementById("topresultslist");
	  while (bindelt.hasChildNodes()) {
		bindelt.removeChild(bindelt.lastChild);
	  }
    bindelt.appendChild(ul);
  } else {
    var div = document.createElement('div');
    div.innerHTML = 'No high impact suggestions. Good job!';
    var bindelt = document.getElementById("topresultslist");
	  while (bindelt.hasChildNodes()) {
		bindelt.removeChild(bindelt.lastChild);
	  }
    bindelt.appendChild(div);
    //document.body.insertBefore(div, null);
  }
}
else{
	if (ul.hasChildNodes()) {
    //document.body.insertBefore(ul, null);
    var bindelt = document.getElementById("topresultslistmobile");
     while (bindelt.hasChildNodes()) {
		bindelt.removeChild(bindelt.lastChild);
	  }
    bindelt.appendChild(ul);
  } else {
    var div = document.createElement('div');
    div.innerHTML = 'No high impact suggestions. Good job!';
    var bindelt = document.getElementById("topresultslistmobile");
	 while (bindelt.hasChildNodes()) {
		bindelt.removeChild(bindelt.lastChild);
	  }
    bindelt.appendChild(div);
    //document.body.insertBefore(div, null);
  }
}
  window.displayTopPageSpeedSuggestionscalled=true;
};
// Helper function that sorts results in order of impact.
function sortByImpact(a, b) { return b.impact - a.impact; }

var RESOURCE_TYPE_INFO = [
  {label: 'JavaScript', field: 'javascriptResponseBytes', color: 'e2192c'},
  {label: 'Images', field: 'imageResponseBytes', color: 'f3ed4a'},
  {label: 'CSS', field: 'cssResponseBytes', color: 'ff7008'},
  {label: 'HTML', field: 'htmlResponseBytes', color: '43c121'},
  {label: 'Flash', field: 'flashResponseBytes', color: 'f8ce44'},
  {label: 'Text', field: 'textResponseBytes', color: 'ad6bc5'},
  {label: 'Other', field: 'otherResponseBytes', color: '1051e8'},
];
callbacks.displayResourceSizeBreakdown = function(result) {
  var stats = result.pageStats;
  var labels = [];
  var data = [];
  var colors = [];
  var totalBytes = 0;
  var largestSingleCategory = 0;
  for (var i = 0, len = RESOURCE_TYPE_INFO.length; i < len; ++i) {
    var label = RESOURCE_TYPE_INFO[i].label;
    var field = RESOURCE_TYPE_INFO[i].field;
    var color = RESOURCE_TYPE_INFO[i].color;
    if (field in stats) {
      var val = Number(stats[field]);
      totalBytes += val;
      if (val > largestSingleCategory) largestSingleCategory = val;
      labels.push(label);
      data.push(val);
      colors.push(color);
    }
  }
    // Construct the query to send to the Google Chart Tools.
  var query = [
    'chs=300x140',
    'cht=p3',
    'chts=' + ['000000', 16].join(','),
    'chco=' + colors.join('|'),
    'chd=t:' + data.join(','),
    'chdl=' + labels.join('|'),
    'chdls=000000,14',
    'chp=1.6',
    'chds=0,' + largestSingleCategory,
  ].join('&');
  var i = document.createElement('img');
  i.src = 'http://chart.apis.google.com/chart?' + query;
  //document.body.insertBefore(i, null);
  if(!window.displayResourceSizeBreakdown){
  var bindelt = document.getElementById("piechart");
}
else{
	var bindelt = document.getElementById("piechartmobile");
}
  bindelt.appendChild(i);
  window.displayResourceSizeBreakdown=true;
};
function speedRemarks(score,tab) {
  var scoreremarks='';
  var url='http://gator.devgmi.com/';
  //var url = "<?php echo $this->getBaseUrl(); ?>";
  if(score<=50){
	  scoreremarks= '<div style="color:red">Your site speed is too low.please do following suggestions to speed up your site.</div>';
  }
  else if(score<=70) {
	  scoreremarks= '<div style="color:red">Your site speed is low.please do following suggestions to speed up your site.</div>';
  }
  else if(score<=90) {
	  scoreremarks= '<div style="color:red">Your site speed is average.please do following suggestions to speed up your site.</div>';
  }
  else if(score<=95) {
	  scoreremarks= '<div style="color:green">Your site speed is better.please do following suggestions to reach 100%.</div>';
  }
  else {
	  scoreremarks= '<div style="color:green">Your site speed is excellent.</div>';
  }
  scoreremarks+="<br><h3>Please contact us at http://magefirewall.com or Tweet us at @MageFirewall</h3>";
  scoreremarks+="<br><div>Visit <a target='_blank' href='https://developers.google.com/speed/pagespeed/insights/?url="+url+"&tab="+tab+"'>Google Page Speed</a> to view full details</div>";
  return scoreremarks;
	
}
function showchart(elt,type,score) {
	FusionCharts.ready(function () {
	var cSatScoreChart = new FusionCharts({
		type: 'angulargauge',
		renderAt: elt,
		width: '400',
		height: '250',
		dataFormat: 'json',
		dataSource: {
			"chart": {
				"caption": "Google Page Speed Score",
				"subcaption":type + ' - ' +score+'/100',
				"lowerLimit": "0",
				"upperLimit": "100",
				"theme": "fint"
			},
			"colorRange": {
				"color": [
					{
						"minValue": "0",
						"maxValue": "50",
						"code": "#e44a00"
					},
					{
						"minValue": "50",
						"maxValue": "75",
						"code": "#f8bd19"
					},
					{
						"minValue": "75",
						"maxValue": "100",
						"code": "#6baa01"
					}
				]
			},
			"dials": {
				"dial": [{
					"value": score
				}]
			}
		}
	});
	cSatScoreChart.render();
});	
}
</script>
<div>
	<h4>Google Page Speed Results</h4>
</div>
<style>
	.speednav-tabs { border-bottom: 2px solid #DDD;display:block; }
    .speednav-tabs > li.active > a, .speednav-tabs > li.active > a:focus, .speednav-tabs > li.active > a:hover { border-width: 0; }
    .speednav-tabs > li > a { border: none; color: #000; }
	.speednav-tabs > li.active > a, .speednav-tabs > li > a:hover { border: none; color: #000 !important; background: transparent; }
	.speednav-tabs > li > a::after { content: ""; background: #ba4000; height: 2px; position: absolute; width: 100%; left: 0px; bottom: -1px; transition: all 250ms ease 0s; transform: scale(0); }
	.speednav-tabs > li.active > a::after, .nav-tabs > li:hover > a::after { transform: scale(1); }
	.speednav-nav > li > a::after { background: #21527d none repeat scroll 0% 0%; color: #fff; }
	.speednav-pane { padding: 15px 0; }
	.tab-content{padding:20px;margin-top:30px;}
	.speednav-tabs>li {
		float: left;
		margin-bottom: -1px;
		padding:10px 20px;
		background-color:#fff;
		color:#fff;
	}
	.speednav>li {
		position: relative;
		display: block;
	}
	.tab-content>.tab-pane {
		display: none;
		visibility: hidden;
	}
	.tab-content>.active {
		display: block;
		visibility: visible;
	}
	.speednav-tabs > li.active { border:1px solid #DDDDDD;}
	.card {background: #FFF none repeat scroll 0% 0%; box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.3); margin-bottom: 30px; }
	.loading-txt { display:block;}
	
</style>

<div class="container">
	<div class="row">
		<div class="col-md-6">
			<!-- Nav tabs --><div class="card">
			<ul class="speednav speednav-tabs" role="tablist">
				<li id="desktop-link" role="presentation" class="active"><a href="#desktop" aria-controls="desktop" role="tab" data-toggle="tab">Desktop</a></li>
				<li id="mobile-link" role="presentation"><a href="#mobile" aria-controls="mobile" role="tab" data-toggle="tab">Mobile</a></li>
			</ul>

			<!-- Tab panes -->
			<div class="tab-content">
				<div role="tabpanel" class="tab-pane active" id="desktop">
					<h4>Your Website Page Speed Score</h4>
					<div class="loading-txt">Loading...</div>
					<div id="speedometer"></div><br>
					<div id="speedometer-remarks"></div><br>
					<h4>Follow the top page speed suggestions</h4>
					<div class="loading-txt">Loading...</div>
					<div id="topresultslist"></div><br>
					<h4>Resource size breakdown pie chart</h4>
					<div class="loading-txt">Loading...</div>
					<div id="piechart"></div><br>
				</div>
				<div role="tabpanel" class="tab-pane" id="mobile">
					<h4>Your Website Page Speed Score</h4>
					
					<div id="speedometermobile"></div><br>
					<div id="speedometer-remarks-mobile"></div><br>
					<h4>Follow the top page speed suggestions</h4>
					
					<div id="topresultslistmobile"></div><br>
					<h4>Resource size breakdown pie chart</h4>
					
					<div id="piechartmobile"></div><br>
				</div>
			</div>
		</div>
	</div>
</div>
</div>

<script type="text/javascript">
require([ 'jquery', 'jquery/ui'], function($){ $( "#mobile-link" ).click(function() {
	jQuery('#desktop').hide();
   jQuery('#mobile').show();
    
}); });
require([ 'jquery', 'jquery/ui'], function($){ $( "#desktop-link" ).click(function() {
	jQuery('#mobile').hide();
    jQuery('#desktop').show();
}); });

</script>
